{
  "_args": [
    [
      "rating@^0.1.0",
      "/var/www/html/dev_zeepzoop-frontend"
    ]
  ],
  "_from": "rating@>=0.1.0 <0.2.0",
  "_id": "rating@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/rating",
  "_npmUser": {
    "email": "julian@juliangruber.com",
    "name": "juliangruber"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "name": "rating",
    "raw": "rating@^0.1.0",
    "rawSpec": "^0.1.0",
    "scope": null,
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/rating/-/rating-0.1.0.tgz",
  "_shasum": "85cb1840c7fe88b73f818514953986c1c00f22b8",
  "_shrinkwrap": null,
  "_spec": "rating@^0.1.0",
  "_where": "/var/www/html/dev_zeepzoop-frontend",
  "author": {
    "email": "mail@juliangruber.com",
    "name": "Julian Gruber",
    "url": "http://juliangruber.com"
  },
  "bugs": {
    "url": "https://github.com/juliangruber/rating/issues"
  },
  "dependencies": {
    "contains": "~0.1.1"
  },
  "description": "Star rating widget.",
  "devDependencies": {
    "insert-css": "0.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "85cb1840c7fe88b73f818514953986c1c00f22b8",
    "tarball": "https://registry.npmjs.org/rating/-/rating-0.1.0.tgz"
  },
  "homepage": "https://github.com/juliangruber/rating",
  "keywords": [
    "browser",
    "browserify",
    "rating",
    "star",
    "widget"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    }
  ],
  "name": "rating",
  "optionalDependencies": {},
  "readme": "\n# rating\n\nStar rating widget.\n\n## Example\n\nCreate a 5-star rating widget, add it to them DOM and get updates about its state.\n\nMake sure that you style the `.glow` class so you can actually see the stars changing.\n\n```js\nvar Rating = require('rating');\n\nvar rating = new Rating([1, 2, 3, 4, 5]);\ndocument.body.appendChild(rating.el);\n\nrating.on('rate', function(weight) {\n  console.log('rated: ' + weight);\n});\n\nrating.on('current', function(weight) {\n  console.log('current: ' + weight);\n});\n```\n\n## Custom dom\n\nInstead of using the default DOM you can provide your own:\n\n```html\n<span class=\"rating\">\n  <span class=\"star\">â˜…</span>\n</span>\n```\n\n```js\nvar Rating = require('rating');\n\nvar container = document.querySelector('.rating');\nvar star = document.querySelector('.star');\nstar.parentNode.removeChild(star);\n\nvar rating = new Rating([1, 2, 3, 4, 5], {\n  container: container,\n  star: star\n});\n\nrating.on('rate', function(weight) {\n  console.log('rated: ' + weight);\n});\n\nrating.on('select', function(weight) {\n  console.log('current: ' + weight);\n});\n```\n\n## API\n\n### Rating(weights[, opts])\n\nCreate a new rating widget with the given array of `weights`.\n\nMake sure that you style the `.glow` class so you can actually see the stars changing.\n\nPossible options:\n\n* `container (Element)`: Instead of creating a new DOM element for the widget, render everything into `container`.\n* `star (Element)`: Clone the `star` element for every star that is to be shown, instead of using the default star element.\n* `readOnly (Boolean)`: If `true`, the rating can't be modified.\n\n### Rating#el\n\nThe widget's dom element.\n\n### Rating#set(weight)\n\nSet the current `weight`.\n\n### Rating#on('rate', fn)\n\nCalls `fn` with the the weight the user chose by clicking on a star, or when you set it via `Rating#set` manually.\n\n### Rating#on('select', fn)\n\nCalls `fn` with the current selected `weight`.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install rating\n```\n\nThen bundle for the browser with\n[browserify](https://github.com/substack/node-browserify).\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/rating.git"
  },
  "version": "0.1.0"
}
